type CycleManagement = record {
  refueling_amount : nat;
  initial_supply : nat;
  refueling_threshold : nat;
};
type CycleManagements = record {
  db : CycleManagement;
  vault_intial_supply : nat;
  refueling_interval : nat64;
  proxy : CycleManagement;
  indexer : CycleManagement;
};
type Env = variant { Production; Test; LocalDevelopment };
type HttpHeader = record { value : text; name : text };
type HttpResponse = record {
  status : nat;
  body : vec nat8;
  headers : vec HttpHeader;
};
type HttpsSnapshotIndexerSourceAttrs = record {
  queries : vec record { text; text };
};
type InitError = variant {
  InvalidDestination : text;
  InvalidPrincipal : principal;
  InvalidContent : text;
  InvalidRequest : text;
};
type Result = variant { Ok; Err : InitError };
type Snapshot = record { value : SnapshotValue; timestamp : nat64 };
type SnapshotValue = record { id : text; result : _ResultX; jsonrpc : text };
type SourceType = variant { evm; https; chainsight };
type Sources = record {
  source : text;
  interval_sec : opt nat32;
  attributes : HttpsSnapshotIndexerSourceAttrs;
  source_type : SourceType;
};
type TransformArgs = record { context : vec nat8; response : HttpResponse };
type _ResultX = record {
  fee : nat32;
  fee_growth_global0_x128 : nat32;
  ticks : text;
  protocol_token0_fees : nat32;
  tick_current : int32;
  uncollected_fees_token0 : nat32;
  uncollected_fees_token1 : nat32;
  log_index : nat32;
  liquidity : nat32;
  create_event : text;
  event_count : nat32;
  token0_price : nat32;
  fee_growth_global1_x128 : nat32;
  token0_amount : nat32;
  protocol_token1_fees : nat32;
  token1_price : nat32;
  token0 : text;
  token1 : text;
  address : text;
  timestamp : nat32;
  token1_amount : nat32;
  block : nat32;
  positions : text;
  sqrt_ratio_x96 : nat32;
  max_liquidity_per_tick : nat32;
  tick_spacing : int32;
  txn_index : nat32;
};
service : {
  get_last_snapshot : () -> (Snapshot) query;
  get_last_snapshot_value : () -> (SnapshotValue) query;
  get_proxy : () -> (principal);
  get_snapshot : (nat64) -> (Snapshot) query;
  get_snapshot_value : (nat64) -> (SnapshotValue) query;
  get_snapshots : () -> (vec Snapshot) query;
  get_sources : () -> (vec Sources) query;
  get_top_snapshot_values : (nat64) -> (vec SnapshotValue) query;
  get_top_snapshots : (nat64) -> (vec Snapshot) query;
  index : () -> ();
  init_in : (Env, CycleManagements) -> (Result);
  proxy_get_last_snapshot : (vec nat8) -> (vec nat8);
  proxy_get_last_snapshot_value : (vec nat8) -> (vec nat8);
  proxy_get_snapshot : (vec nat8) -> (vec nat8);
  proxy_get_snapshot_value : (vec nat8) -> (vec nat8);
  proxy_get_snapshots : (vec nat8) -> (vec nat8);
  proxy_get_top_snapshot_values : (vec nat8) -> (vec nat8);
  proxy_get_top_snapshots : (vec nat8) -> (vec nat8);
  proxy_snapshots_len : (vec nat8) -> (vec nat8);
  set_task : (nat32, nat32) -> ();
  snapshots_len : () -> (nat64) query;
  transform_https_response : (TransformArgs) -> (HttpResponse) query;
}